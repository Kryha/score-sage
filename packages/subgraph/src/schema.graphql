type Player @entity {
  id: ID!
  gameId: String!
  address: Bytes!
  rating: BigInt!
  createdAt: BigInt!
  gamesWon: Int!
  gamesLost: Int!
  proof: Bytes!
  witness: [Bytes!]!
}

# fragment PlayerGame on Player {
#   game
#   rating
#   gamesWon
#   gamesLost
# }

# "Player object is used to store player information"
# type Player @entity {
#   id: ID!
#   "Ethereum Address of the player"
#   address: Bytes!
#   "Games played by the player"
#   games: [PlayerRanking!] @derivedFrom(field: "player")
# }

# type Game @entity {
#   id: ID!
#   "Id of the game"
#   gameId: String!
#   "Score of the player in the game"
#   score: Int!
#   "Address of the player in the game"
#   players: [PlayerRanking!] @derivedFrom(field: "game")
#   "Name of the game"
#   name: String!
#   "Description of the game"
#   description: String!
# }
